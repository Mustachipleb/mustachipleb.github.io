{"version":3,"sources":["pages/home/images/portrait.jpg","pages/home/index.jsx","pages/skills/index.jsx","pages/notfound/index.jsx","pages/contact/index.jsx","pages/_header/index.jsx","pages/projects/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Column","title","size","subtitle","src","portrait","alt","rounded","offset","animationData","animation1","animation2","animation3","animation4","to","RatingsTick","styled","Element","opacity","Tech","name","rating","ratingObj","i","push","display","p","mr","backgroundColor","marginless","textColor","textWeight","pb","flexDirection","mt","kind","vertical","flexWrap","centered","animation","textAlign","spaced","mb","href","className","useState","active","setActive","handleClick","Brand","Burger","onClick","Menu","Container","Item","App","Helmet","exact","path","component","Home","Skills","Contact","projects","NotFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4429adf1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/portrait.df478384.jpg\";","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport {\n  Section,\n  Container,\n  Heading,\n  Image,\n  Columns,\n} from 'react-bulma-components';\nimport Lottie from 'lottie-react';\nimport { Link } from 'react-router-dom';\n\nimport animation1 from './animations/animation1.json';\nimport animation2 from './animations/animation2.json';\nimport animation3 from './animations/animation3.json';\nimport animation4 from './animations/animation4.json';\nimport portrait from './images/portrait.jpg';\n\nexport default () => (\n  <>\n    <Section>\n      <Container>\n        <Columns>\n          <Columns.Column>\n            <Heading title size={1}>\n              Nicolas Van Damme\n            </Heading>\n            <Heading subtitle size={4}>\n              Web &amp; Enterprise Developer\n            </Heading>\n          </Columns.Column>\n          <Columns.Column size={4}>\n            <Image src={portrait} alt=\"\" rounded />\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </Section>\n    <Section>\n      <Container>\n        <Columns>\n          <Columns.Column>\n            <Heading size={3}>A learner at heart</Heading>\n            <Columns>\n              <Columns.Column offset={1}>\n                If there&apos;s one thing I love doing, it&apos;s tinkering with\n                new technologies. Whether it be a new framework or a personal\n                project, my interest in the IT world goes far and wide.\n              </Columns.Column>\n            </Columns>\n          </Columns.Column>\n          <Columns.Column size={3}>\n            <Lottie animationData={animation1} />\n          </Columns.Column>\n          <Columns.Column size={1} />\n        </Columns>\n      </Container>\n    </Section>\n    <Section>\n      <Container>\n        <Columns>\n          <Columns.Column size={4}>\n            <Lottie animationData={animation2} />\n          </Columns.Column>\n          <Columns.Column>\n            <Heading size={3}>A team player</Heading>\n            <Columns>\n              <Columns.Column offset={1}>\n                My ability to reflect on my own abilities and personality allows\n                me to be a very reliable team member. Transparancy is a trait\n                which I hold close to my heart.\n              </Columns.Column>\n            </Columns>\n          </Columns.Column>\n          <Columns.Column size={1} />\n        </Columns>\n      </Container>\n    </Section>\n    <Section>\n      <Container>\n        <Columns>\n          <Columns.Column>\n            <Heading>Communication</Heading>\n            <Columns>\n              <Columns.Column offset={1}>\n                Good communication paves the way for great projects and good\n                comradery. I strive to be open and fair towards everyone around\n                me, and am not afraid to voice concerns.\n              </Columns.Column>\n            </Columns>\n          </Columns.Column>\n          <Columns.Column size={5}>\n            <Lottie animationData={animation3} />\n          </Columns.Column>\n          <Columns.Column size={1} />\n        </Columns>\n      </Container>\n    </Section>\n    <Section>\n      <Container>\n        <Columns>\n          <Columns.Column size={3}>\n            <Lottie animationData={animation4} />\n          </Columns.Column>\n          <Columns.Column>\n            <Heading>Final word</Heading>\n            <Columns>\n              <Columns.Column offset={1}>\n                Did I spark your interest? Do you want to have a word with me?\n                My contact information is available right{' '}\n                <Link to=\"/contact\">here</Link>.\n              </Columns.Column>\n            </Columns>\n          </Columns.Column>\n          <Columns.Column size={1} />\n        </Columns>\n      </Container>\n    </Section>\n  </>\n);\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport {\n  Section,\n  Container,\n  Heading,\n  Tile,\n  Content,\n  Element,\n  Tag,\n  Columns,\n} from 'react-bulma-components';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst RatingsTick = styled(Element)`\n  border-radius: 9999px;\n  opacity: ${({ opacity }) => opacity}%;\n  vertical-align: middle;\n`;\n\nconst Tech = ({ name, rating }) => {\n  const ratingObj = [];\n  for (let i = 4; i >= 0; i--) {\n    ratingObj.push(\n      <RatingsTick\n        display=\"inline-block\"\n        p={2}\n        mr={1}\n        backgroundColor=\"light\"\n        opacity={i < rating ? 100 : 30}\n      />,\n    );\n  }\n\n  return (\n    <Columns marginless>\n      <Columns.Column p=\"0\">\n        <Heading\n          subtitle\n          textColor=\"white\"\n          textWeight=\"semibold\"\n          marginless\n          pb={2}\n        >\n          {name}\n        </Heading>\n      </Columns.Column>\n      <Columns.Column size={7} p=\"0\">\n        <Content display=\"flex\" flexDirection=\"row-reverse\" mt={1}>\n          {ratingObj}\n        </Content>\n      </Columns.Column>\n    </Columns>\n  );\n};\n\nTech.propTypes = {\n  name: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n};\n\nexport default () => (\n  <>\n    <Section>\n      <Container>\n        <Heading size={1}>Skills</Heading>\n        <Tile kind=\"ancestor\">\n          <Tile vertical>\n            <Tile>\n              <Tile vertical size={4}>\n                <Tile kind=\"parent\">\n                  <Tile\n                    kind=\"child\"\n                    backgroundColor=\"primary\"\n                    p={3}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                  >\n                    <Tech name=\"C#\" rating={5} />\n                    <Content textColor=\"white\">\n                      <p>\n                        From WPF to Blazor, with over 4 years of experience\n                        writing C# code, I&apos;m confident in my ability to\n                        work with everything related to the language.\n                      </p>\n                    </Content>\n                    <Content textColor=\"white\" mt=\"auto\">\n                      <Element display=\"flex\" flexWrap=\"wrap\">\n                        <Tag mt={2} mr={2}>\n                          ASP.NET Core\n                        </Tag>\n                        <Tag mt={2} mr={2}>\n                          Blazor\n                        </Tag>\n                        <Tag mt={2} mr={2}>\n                          EF Core\n                        </Tag>\n                        <Tag mt={2} mr={2}>\n                          AutoMapper\n                        </Tag>\n                        <Tag mt={2} mr={2}>\n                          LINQ\n                        </Tag>\n                      </Element>\n                    </Content>\n                  </Tile>\n                </Tile>\n              </Tile>\n              <Tile vertical size={8}>\n                <Tile>\n                  <Tile vertical size={7}>\n                    <Tile kind=\"parent\">\n                      <Tile\n                        kind=\"child\"\n                        backgroundColor=\"info\"\n                        p={3}\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                      >\n                        <Tech name=\"React\" rating={3} />\n                        <Content textColor=\"white\">\n                          <p>\n                            Though my experience with React is limited, I have\n                            already had the oppertunity to learn in a corporate\n                            environment, and I don&apos;t lack the motivation to\n                            learn even more.\n                          </p>\n                        </Content>\n                      </Tile>\n                    </Tile>\n                    <Tile kind=\"parent\">\n                      <Tile\n                        kind=\"child\"\n                        backgroundColor=\"danger\"\n                        p={3}\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                      >\n                        <Tech name=\"Angular\" rating={2} />\n                        <Content textColor=\"white\">\n                          <p>\n                            My first experience with SPAs, I believe it acted as\n                            a great plus in the process of learning best\n                            practices with Javascript and Typescript.\n                          </p>\n                        </Content>\n                      </Tile>\n                    </Tile>\n                  </Tile>\n                  <Tile vertical size={5}>\n                    <Tile kind=\"parent\">\n                      <Tile\n                        kind=\"child\"\n                        backgroundColor=\"dark\"\n                        p={3}\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                      >\n                        <Tech name=\"Git\" rating={4} />\n                        <Content textColor=\"white\">\n                          <p>\n                            Part of being a good developer is good experience\n                            with version control. Atomic commits and descriptive\n                            concise titles paired with knowledge of best\n                            practices makes for a good whole.\n                          </p>\n                        </Content>\n                      </Tile>\n                    </Tile>\n                  </Tile>\n                </Tile>\n                <Tile>\n                  <Tile kind=\"parent\">\n                    <Tile\n                      kind=\"child\"\n                      backgroundColor=\"success\"\n                      p={3}\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                    >\n                      <Tech name=\"Systems\" rating={3} />\n                      <Content textColor=\"white\">\n                        <p>\n                          While I&apos;m not a sysadmin, I love tinkering with\n                          my Ubuntu servers at home. That plus my (attempt at)\n                          daily driving Linux makes for a good knowledge of it.\n                        </p>\n                      </Content>\n                      <Content textColor=\"white\" mt=\"auto\">\n                        <Element display=\"flex\" flexWrap=\"wrap\">\n                          <Tag mt={2} mr={2}>\n                            Ubuntu\n                          </Tag>\n                          <Tag mt={2} mr={2}>\n                            MacOS\n                          </Tag>\n                          <Tag mt={2} mr={2}>\n                            Docker\n                          </Tag>\n                        </Element>\n                      </Content>\n                    </Tile>\n                  </Tile>\n                </Tile>\n              </Tile>\n            </Tile>\n            <Tile>\n              <Tile kind=\"parent\">\n                <Tile\n                  kind=\"child\"\n                  backgroundColor=\"link\"\n                  p={3}\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                >\n                  <Tech name=\"SQL\" rating={3} />\n                  <Content textColor=\"white\">\n                    <p>\n                      I have a good knowledge of advanced SQL concepts, such as\n                      CTEs, window functions, stored procedures etc.\n                    </p>\n                  </Content>\n                  <Content textColor=\"white\" mt=\"auto\">\n                    <Element display=\"flex\" flexWrap=\"wrap\">\n                      <Tag mt={2} mr={2}>\n                        Transact-SQL\n                      </Tag>\n                    </Element>\n                  </Content>\n                </Tile>\n              </Tile>\n            </Tile>\n          </Tile>\n        </Tile>\n      </Container>\n    </Section>\n  </>\n);\n","import React from 'react';\nimport Lottie from 'lottie-react';\nimport 'bulma/css/bulma.css';\nimport { Section, Container, Heading, Columns } from 'react-bulma-components';\n\nimport animation from './animations/notfound.json';\n\nexport default () => (\n  <Section>\n    <Container>\n      <Columns>\n        <Columns.Column centered>\n          <Heading size={1}>Oops...</Heading>\n          <Heading size={3}>\n            I looked far and wide for the page you asked for, but I found\n            nothing.\n          </Heading>\n          <Lottie animationData={animation} />\n        </Columns.Column>\n      </Columns>\n    </Container>\n  </Section>\n);\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport { Section, Container, Heading, Columns } from 'react-bulma-components';\n\nexport default () => (\n  <Section>\n    <Container>\n      <Columns centered>\n        <Columns.Column size=\"half\" textAlign=\"center\">\n          <Heading size={1} spaced>\n            Contact\n          </Heading>\n          <Heading size={4} subtitle mb={1}>\n            E-mail\n          </Heading>\n          <a\n            href=\"mailto:nicolasvandamme2@hotmail.com\"\n            className=\"is-block mb-4\"\n          >\n            nicolasvandamme2@hotmail.com\n          </a>\n          <Heading size={4} subtitle mb={1}>\n            LinkedIn\n          </Heading>\n          <a\n            href=\"https://www.linkedin.com/in/nicolasvandammecs/\"\n            className=\"is-block mb-4\"\n          >\n            nicolasvandammecs\n          </a>\n          <Heading size={4} subtitle mb={1}>\n            Phone\n          </Heading>\n          <a href=\"tel:+32470540130\" className=\"is-block mb-4\">\n            +32 470 54 01 30\n          </a>\n        </Columns.Column>\n      </Columns>\n    </Container>\n  </Section>\n);\n","import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport { Navbar } from 'react-bulma-components';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n  const [active, setActive] = useState(false);\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  return (\n    <Navbar>\n      <Navbar.Brand>\n        <Navbar.Burger\n          onClick={handleClick}\n          className={`${active ? 'is-active' : ''}`}\n        />\n      </Navbar.Brand>\n      <Navbar.Menu className={`${active ? 'is-active' : ''}`}>\n        <Navbar.Container>\n          <Link to=\"/\" onClick={handleClick}>\n            <Navbar.Item>About me</Navbar.Item>\n          </Link>\n          <Link to=\"/skills\" onClick={handleClick}>\n            <Navbar.Item>Skills</Navbar.Item>\n          </Link>\n          <Link to=\"/contact\" onClick={handleClick}>\n            <Navbar.Item>Contact me</Navbar.Item>\n          </Link>\n          <Link to=\"/projects\" onClick={handleClick}>\n            <Navbar.Item>Projects</Navbar.Item>\n          </Link>\n        </Navbar.Container>\n      </Navbar.Menu>\n    </Navbar>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport { Section, Container, Heading, Columns } from 'react-bulma-components';\n\nexport default () => (\n  <Section>\n    <Container>\n      <Columns centered>\n        <Columns.Column size=\"half\" textAlign=\"center\">\n          <Heading size={1} spaced>\n            Projects\n          </Heading>\n          <Container mb={4}>\n            <Heading size={4}>Codifly&apos;s corporate website</Heading>\n            <Heading size={7} subtitle mb={1}>\n              Jun 2021\n            </Heading>\n            <p>\n              In my month working as a student at Codifly, I was stationed at\n              the helm of the redesign of their corporate website&apos;s\n              homepage. In a hands-on fashion, I was able to quickly get to\n              grips with React and Flow.\n            </p>\n          </Container>\n          <Container mb={4}>\n            <Heading size={4}>Reservation system for HIER.</Heading>\n            <Heading size={7} subtitle mb={1}>\n              Sept 2021 - Jan 2022\n            </Heading>\n            <p>\n              In my last year of studying at HoGent, I was paired up with 4\n              others to create an online reservation service for <i>HIER.</i>.{' '}\n              <i>HIER.</i> is a place where people can go to hold meetings and\n              participate in coworking. Using Blazor and the Android SDK we made\n              a single page application and mobile application to suit their\n              needs.\n            </p>\n          </Container>\n          <Container mb={4}>\n            <Heading size={4}>The home stack</Heading>\n            <Heading size={7} subtitle mb={1}>\n              Oct 2021 (ongoing)\n            </Heading>\n            <p>\n              A Traefik reverse proxy hooked up to over 15 other services. A\n              variation of a Plex stack, a Rocket Chat server and a personal\n              blog. All connected with an Organizr dashboard, secured through\n              Google OAuth, and available only within Belgium thanks to\n              Cloudflare DNS with a Let&apos;s Encrypt certificate.\n            </p>\n            <p>Containerised with docker-compose.</p>\n          </Container>\n        </Columns.Column>\n      </Columns>\n    </Container>\n  </Section>\n);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n} from 'react-router-dom';\n\nimport Home from './pages/home';\nimport Skills from './pages/skills';\nimport NotFound from './pages/notfound';\nimport Contact from './pages/contact';\nimport './App.css';\nimport Header from './pages/_header';\nimport projects from './pages/projects';\n\nconst App = () => (\n  <Router>\n    <Helmet>\n      <title>Nicolas Van Damme</title>\n    </Helmet>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/skills\" component={Skills} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/projects\" component={projects} />\n      <Route path=\"/404\" component={NotFound} />\n      <Redirect path=\"/*\" to=\"/404\" />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}