{"version":3,"sources":["pages/home/images/portrait.jpg","pages/home/index.jsx","pages/skills/index.jsx","pages/notfound/index.jsx","pages/contact/index.jsx","pages/_header/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Column","size","subtitle","src","portrait","alt","rounded","offset","animationData","animation1","animation2","animation3","animation4","to","RatingsTick","styled","Element","opacity","Tech","name","rating","ratingObj","i","push","display","p","mr","backgroundColor","marginless","textColor","textWeight","pb","flexDirection","mt","kind","vertical","flexWrap","centered","animation","textAlign","spaced","mb","href","className","py","Menu","Item","App","Helmet","exact","path","component","Home","Skills","Contact","NotFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd82f9e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/portrait.df478384.jpg\";","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport {\r\n  Section,\r\n  Container,\r\n  Heading,\r\n  Image,\r\n  Columns,\r\n} from 'react-bulma-components';\r\nimport Lottie from 'lottie-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport animation1 from './animations/animation1.json';\r\nimport animation2 from './animations/animation2.json';\r\nimport animation3 from './animations/animation3.json';\r\nimport animation4 from './animations/animation4.json';\r\nimport portrait from './images/portrait.jpg';\r\n\r\nexport default () => (\r\n  <>\r\n    <Section>\r\n      <Container>\r\n        <Columns>\r\n          <Columns.Column>\r\n            <Heading size={1}>Nicolas Van Damme</Heading>\r\n            <Heading subtitle size={4}>\r\n              Web &amp; Enterprise developer\r\n            </Heading>\r\n          </Columns.Column>\r\n          <Columns.Column size={4}>\r\n            <Image src={portrait} alt=\"\" rounded />\r\n          </Columns.Column>\r\n        </Columns>\r\n      </Container>\r\n    </Section>\r\n    <Section>\r\n      <Container>\r\n        <Columns>\r\n          <Columns.Column>\r\n            <Heading size={3}>Up to date</Heading>\r\n            <Columns>\r\n              <Columns.Column offset={1}>\r\n                Initially specialised in C#, I acquired a newfound love for\r\n                React. React. With these 2 combined, I can tackle both\r\n                functional and functional and object-oriented workloads with\r\n                relative ease. New spark my interest, and I keep myself up to\r\n                date with what I work on and with.\r\n              </Columns.Column>\r\n            </Columns>\r\n          </Columns.Column>\r\n          <Columns.Column size={3}>\r\n            <Lottie animationData={animation1} />\r\n          </Columns.Column>\r\n          <Columns.Column size={1} />\r\n        </Columns>\r\n      </Container>\r\n    </Section>\r\n    <Section>\r\n      <Container>\r\n        <Columns>\r\n          <Columns.Column size={4}>\r\n            <Lottie animationData={animation2} />\r\n          </Columns.Column>\r\n          <Columns.Column>\r\n            <Heading size={3}>Awareness</Heading>\r\n            <Columns>\r\n              <Columns.Column offset={1}>\r\n                My ability to reflect on my own abilities and personality allows\r\n                me to be a very reliable team player. I always aim to tell the\r\n                truth, and am by extension able to consistently provide accurate\r\n                estimations.\r\n              </Columns.Column>\r\n            </Columns>\r\n          </Columns.Column>\r\n          <Columns.Column size={1} />\r\n        </Columns>\r\n      </Container>\r\n    </Section>\r\n    <Section>\r\n      <Container>\r\n        <Columns>\r\n          <Columns.Column>\r\n            <Heading>Communication</Heading>\r\n            <Columns>\r\n              <Columns.Column offset={1}>\r\n                Good communication paves the way for great projects, great\r\n                people, and great friends. I strive to be open and fair towards\r\n                everyone around me.\r\n              </Columns.Column>\r\n            </Columns>\r\n          </Columns.Column>\r\n          <Columns.Column size={5}>\r\n            <Lottie animationData={animation3} />\r\n          </Columns.Column>\r\n          <Columns.Column size={1} />\r\n        </Columns>\r\n      </Container>\r\n    </Section>\r\n    <Section>\r\n      <Container>\r\n        <Columns>\r\n          <Columns.Column size={3}>\r\n            <Lottie animationData={animation4} />\r\n          </Columns.Column>\r\n          <Columns.Column>\r\n            <Heading>Final word</Heading>\r\n            <Columns>\r\n              <Columns.Column offset={1}>\r\n                Did I spark your interest? Do you want to have a word with me?\r\n                My contact information is available right{' '}\r\n                <Link to=\"/contact\">here</Link>.\r\n              </Columns.Column>\r\n            </Columns>\r\n          </Columns.Column>\r\n          <Columns.Column size={1} />\r\n        </Columns>\r\n      </Container>\r\n    </Section>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport {\r\n  Section,\r\n  Container,\r\n  Heading,\r\n  Tile,\r\n  Content,\r\n  Element,\r\n  Tag,\r\n  Columns,\r\n} from 'react-bulma-components';\r\nimport styled from 'styled-components';\r\n\r\nconst RatingsTick = styled(Element)`\r\n  border-radius: 9999px;\r\n  opacity: ${({ opacity }) => opacity}%;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Tech = ({ name, rating }) => {\r\n  const ratingObj = [];\r\n  for (let i = 4; i >= 0; i--) {\r\n    ratingObj.push(\r\n      <RatingsTick\r\n        display=\"inline-block\"\r\n        p={2}\r\n        mr={1}\r\n        backgroundColor=\"light\"\r\n        opacity={i < rating ? 100 : 30}\r\n      />,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Columns marginless>\r\n      <Columns.Column p=\"0\">\r\n        <Heading\r\n          subtitle\r\n          textColor=\"white\"\r\n          textWeight=\"semibold\"\r\n          marginless\r\n          pb={2}\r\n        >\r\n          {name}\r\n        </Heading>\r\n      </Columns.Column>\r\n      <Columns.Column size={7} p=\"0\">\r\n        <Content display=\"flex\" flexDirection=\"row-reverse\" mt={1}>\r\n          {ratingObj}\r\n        </Content>\r\n      </Columns.Column>\r\n    </Columns>\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <>\r\n    <Section>\r\n      <Container>\r\n        <Heading size={1}>Skills</Heading>\r\n        <Tile kind=\"ancestor\">\r\n          <Tile vertical>\r\n            <Tile>\r\n              <Tile vertical size={4}>\r\n                <Tile kind=\"parent\">\r\n                  <Tile\r\n                    kind=\"child\"\r\n                    backgroundColor=\"primary\"\r\n                    p={3}\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                  >\r\n                    <Tech name=\"C#\" rating={5} />\r\n                    <Content textColor=\"white\">\r\n                      <p>\r\n                        From WPF to ASP.NET, with over 4 years of experience\r\n                        writing C# code, I&apos;m confident in my ability to\r\n                        create readable code and efficient structures.\r\n                      </p>\r\n                    </Content>\r\n                    <Content textColor=\"white\" mt=\"auto\">\r\n                      <Element display=\"flex\" flexWrap=\"wrap\">\r\n                        <Tag mt={2} mr={2}>\r\n                          ASP.NET Core MVC\r\n                        </Tag>\r\n                        <Tag mt={2} mr={2}>\r\n                          ASP.NET Core Web API\r\n                        </Tag>\r\n                        <Tag mt={2} mr={2}>\r\n                          EF Core\r\n                        </Tag>\r\n                        <Tag mt={2} mr={2}>\r\n                          XUnit\r\n                        </Tag>\r\n                        <Tag mt={2} mr={2}>\r\n                          LINQ\r\n                        </Tag>\r\n                      </Element>\r\n                    </Content>\r\n                  </Tile>\r\n                </Tile>\r\n              </Tile>\r\n              <Tile vertical size={8}>\r\n                <Tile>\r\n                  <Tile vertical size={7}>\r\n                    <Tile kind=\"parent\">\r\n                      <Tile\r\n                        kind=\"child\"\r\n                        backgroundColor=\"info\"\r\n                        p={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                      >\r\n                        <Tech name=\"React\" rating=\"3\" />\r\n                        <Content textColor=\"white\">\r\n                          <p>\r\n                            Though my experience with React itself is lacking, I\r\n                            have already had the oppertunity to learn in a\r\n                            corporate environment, and I don&apos;t lack the\r\n                            motivation.\r\n                          </p>\r\n                        </Content>\r\n                      </Tile>\r\n                    </Tile>\r\n                    <Tile kind=\"parent\">\r\n                      <Tile\r\n                        kind=\"child\"\r\n                        backgroundColor=\"danger\"\r\n                        p={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                      >\r\n                        <Tech name=\"Angular\" rating=\"3\" />\r\n                        <Content textColor=\"white\">\r\n                          <p>\r\n                            My first experience with SPAs, I believe it acted as\r\n                            a great plus in the process of learning best\r\n                            practices with Javascript and Typescript.\r\n                          </p>\r\n                        </Content>\r\n                      </Tile>\r\n                    </Tile>\r\n                  </Tile>\r\n                  <Tile vertical size={5}>\r\n                    <Tile kind=\"parent\">\r\n                      <Tile\r\n                        kind=\"child\"\r\n                        backgroundColor=\"dark\"\r\n                        p={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                      >\r\n                        <Tech name=\"Git\" rating=\"4\" />\r\n                        <Content textColor=\"white\">\r\n                          <p>\r\n                            Part of being a good developer is good experience\r\n                            with version control. Atomic commits and descriptive\r\n                            concise titles paired with knowledge of best\r\n                            practices makes for a good whole.\r\n                          </p>\r\n                        </Content>\r\n                      </Tile>\r\n                    </Tile>\r\n                  </Tile>\r\n                </Tile>\r\n                <Tile>\r\n                  <Tile kind=\"parent\">\r\n                    <Tile\r\n                      kind=\"child\"\r\n                      backgroundColor=\"success\"\r\n                      p={3}\r\n                      display=\"flex\"\r\n                      flexDirection=\"column\"\r\n                    >\r\n                      <Tech name=\"Unix\" rating=\"2\" />\r\n                      <Content textColor=\"white\">\r\n                        <p>\r\n                          While I&apos;m not a sysadmin, I love tinkering with\r\n                          my Ubuntu servers at home, meaning I can navigate\r\n                          around Linux with relative ease.\r\n                        </p>\r\n                      </Content>\r\n                      <Content textColor=\"white\" mt=\"auto\">\r\n                        <Element display=\"flex\" flexWrap=\"wrap\">\r\n                          <Tag mt={2} mr={2}>\r\n                            Ubuntu\r\n                          </Tag>\r\n                          <Tag mt={2} mr={2}>\r\n                            MacOS\r\n                          </Tag>\r\n                          <Tag mt={2} mr={2}>\r\n                            Regex\r\n                          </Tag>\r\n                          <Tag mt={2} mr={2}>\r\n                            Shell\r\n                          </Tag>\r\n                        </Element>\r\n                      </Content>\r\n                    </Tile>\r\n                  </Tile>\r\n                </Tile>\r\n              </Tile>\r\n            </Tile>\r\n            <Tile>\r\n              <Tile kind=\"parent\" size={8}>\r\n                <Tile\r\n                  kind=\"child\"\r\n                  backgroundColor=\"grey\"\r\n                  p={3}\r\n                  display=\"flex\"\r\n                  flexDirection=\"column\"\r\n                >\r\n                  <Tech name=\"Java\" rating=\"4\" />\r\n                  <Content textColor=\"white\">\r\n                    <p>\r\n                      Alongside C#, I&apos;ve also had a fair share of\r\n                      experience with Java. Concepts like streams, socket\r\n                      programming and concurrency with locks are not new to me.\r\n                    </p>\r\n                  </Content>\r\n                  <Content textColor=\"white\" mt=\"auto\">\r\n                    <Element display=\"flex\" flexWrap=\"wrap\">\r\n                      <Tag mt={2} mr={2}>\r\n                        JavaFX\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        Streams\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        Socket Programming\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        Concurrent Locks\r\n                      </Tag>\r\n                    </Element>\r\n                  </Content>\r\n                </Tile>\r\n              </Tile>\r\n              <Tile kind=\"parent\">\r\n                <Tile\r\n                  kind=\"child\"\r\n                  backgroundColor=\"link\"\r\n                  p={3}\r\n                  display=\"flex\"\r\n                  flexDirection=\"column\"\r\n                >\r\n                  <Tech name=\"SQL\" rating=\"3\" />\r\n                  <Content textColor=\"white\">\r\n                    <p>\r\n                      I have a good knowledge of advanced SQL concepts, such as\r\n                      CTEs, window functions, stored procedures etc.\r\n                    </p>\r\n                  </Content>\r\n                  <Content textColor=\"white\" mt=\"auto\">\r\n                    <Element display=\"flex\" flexWrap=\"wrap\">\r\n                      <Tag mt={2} mr={2}>\r\n                        Transact-SQL\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        Window Functions\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        CTE\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        Database Programming\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        Data Warehousing\r\n                      </Tag>\r\n                      <Tag mt={2} mr={2}>\r\n                        Indexes\r\n                      </Tag>\r\n                    </Element>\r\n                  </Content>\r\n                </Tile>\r\n              </Tile>\r\n            </Tile>\r\n          </Tile>\r\n        </Tile>\r\n      </Container>\r\n    </Section>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport Lottie from 'lottie-react';\r\nimport 'bulma/css/bulma.css';\r\nimport { Section, Container, Heading, Columns } from 'react-bulma-components';\r\n\r\nimport animation from './animations/notfound.json';\r\n\r\nexport default () => (\r\n  <Section>\r\n    <Container>\r\n      <Columns>\r\n        <Columns.Column centered>\r\n          <Heading size={1}>Oops...</Heading>\r\n          <Heading size={3}>\r\n            I looked far and wide for the page you asked for, but I found\r\n            nothing.\r\n          </Heading>\r\n          <Lottie animationData={animation} />\r\n        </Columns.Column>\r\n      </Columns>\r\n    </Container>\r\n  </Section>\r\n);\r\n","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport { Section, Container, Heading, Columns } from 'react-bulma-components';\r\n\r\nexport default () => (\r\n  <Section>\r\n    <Container>\r\n      <Columns centered>\r\n        <Columns.Column size=\"half\" textAlign=\"center\">\r\n          <Heading size={1} spaced>\r\n            Contact\r\n          </Heading>\r\n          <Heading size={4} subtitle mb={1}>\r\n            E-mail\r\n          </Heading>\r\n          <a\r\n            href=\"mailto:nicolasvandamme2@hotmail.com\"\r\n            className=\"is-block mb-4\"\r\n          >\r\n            nicolasvandamme2@hotmail.com\r\n          </a>\r\n          <Heading size={4} subtitle mb={1}>\r\n            LinkedIn\r\n          </Heading>\r\n          <a\r\n            href=\"https://www.linkedin.com/in/nicolasvandammecs/\"\r\n            className=\"is-block mb-4\"\r\n          >\r\n            nicolasvandammecs\r\n          </a>\r\n          <Heading size={4} subtitle mb={1}>\r\n            Phone\r\n          </Heading>\r\n          <a href=\"tel:+32470540130\" className=\"is-block mb-4\">\r\n            +32 470 54 01 30\r\n          </a>\r\n        </Columns.Column>\r\n      </Columns>\r\n    </Container>\r\n  </Section>\r\n);\r\n","import 'bulma/css/bulma.css';\r\nimport { Section, Container, Navbar } from 'react-bulma-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => (\r\n  <Section py={1}>\r\n    <Container>\r\n      <Navbar>\r\n        <Navbar.Menu>\r\n          <Navbar.Item>\r\n            <Link to=\"/\">About me</Link>\r\n          </Navbar.Item>\r\n          <Navbar.Item>\r\n            <Link to=\"/skills\">My skills</Link>\r\n          </Navbar.Item>\r\n          <Navbar.Item>\r\n            <Link to=\"/contact\">Contact me</Link>\r\n          </Navbar.Item>\r\n        </Navbar.Menu>\r\n      </Navbar>\r\n    </Container>\r\n  </Section>\r\n);\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport Home from './pages/home';\r\nimport Skills from './pages/skills';\r\nimport NotFound from './pages/notfound';\r\nimport Contact from './pages/contact';\r\nimport './App.css';\r\nimport Header from './pages/_header';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <Helmet>\r\n      <title>Nicolas Van Damme</title>\r\n    </Helmet>\r\n    <Header />\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/skills\" component={Skills} />\r\n      <Route path=\"/contact\" component={Contact} />\r\n      <Route path=\"/404\" component={NotFound} />\r\n      <Redirect path=\"/*\" to=\"/404\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}